[tool.bumpversion]
current_version = "0.7.1"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = 'CHANGES.rst'
search = "\\(unreleased\\)$"
replace = "({now:%Y-%m-%d})"
regex = true

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"
search = "version = [\"']\\d+\\.\\d+[\"']"
serialize = ["{major}.{minor}"]
replace = "version = \"{current_version}\""
regex = true

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"

[[tool.bumpversion.files]]
filename = "setup.py"
parse = "version\\s*=\\s*\"(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"

[tool.ruff.lint]
extend-select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # pydocstyle
    "D",
    # flake8-future-annotations
    "FA",
    # flynt
    "FLY",
    # refurb
    "FURB",
    # isort
    "I",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # Perflint
    "PERF",
    # pygrep-hooks
    "PGH",
    # flake8-pie
    "PIE",
    # pylint
    "PL",
    # flake8-use-pathlib
    "PTH",
    # flake8-pyi
    "PYI",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-raise
    "RSE",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-slots
    "SLOT",
    # flake8-debugger
    "T10",
    # flake8-type-checking
    "TC",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # flake8-2020
    "YTT",
]
ignore = [
    # Missing docstring in public module
    "D100",
    # Missing docstring in public class
    "D101",
    # Missing docstring in public method
    "D102",
    # Missing docstring in public function
    "D103",
    # Missing docstring in public package
    "D104",
    # Missing docstring in magic method
    "D105",
    # Missing docstring in public nested class
    "D106",
    # Missing docstring in __init__
    "D107",
    # One-line docstring should fit on one line with quotes
    "D200",
    # No blank lines allowed after function docstring
    "D202",
    # 1 blank line required between summary line and description
    "D205",
    # Multi-line docstring closing quotes should be on a separate line
    "D209",
    # First line should end with a period
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    # First line should not be the function's "signature"
    "D402",
    # First word of the first line should be properly capitalized
    "D403",
    # Too many return statements
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many arguments in function definition
    "PLR0913",
    # Too many statements
    "PLR0915",
    # Magic value used in comparison
    "PLR2004",
    # String contains ambiguous {}.
    "RUF001",
    # Docstring contains ambiguous {}.
    "RUF002",
    # Comment contains ambiguous {}.
    "RUF003",
    # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF012",
    # Use of `assert` detected
    "S101",
    # Using lxml to parse untrusted data is known to be vulnerable to XML attacks
    "S320",
]

[tool.ruff.lint.flake8-tidy-imports]
banned-module-level-imports = [
    "twisted.internet.reactor",
]

[tool.ruff.lint.per-file-ignores]
# F403 (import *) is not important for examples, same as PERF (performance) and
# S (security).
"examples/*" = ["F403", "PERF", "S"]
# E402 (Module level import not at top of file) is skipped because of the use
# of pytest.importorskip. B904 (raise â€¦ from) and S (security) are not
# important for tests.
"tests/*" = ["B904", "E402", "S"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
